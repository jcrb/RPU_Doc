
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Rpu2"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "Rpu2-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('Rpu2')
Loading required package: lubridate
Loading required package: xtable
Loading required package: openintro
Please visit openintro.org for free statistics materials

Attaching package: ‘openintro’

The following object is masked from ‘package:datasets’:

    cars

Loading required package: plotrix
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("analyse_type_etablissement")
> ### * analyse_type_etablissement
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: analyse_type_etablissement
> ### Title: Analyse etablissement
> ### Aliases: analyse_type_etablissement
> 
> ### ** Examples
> 
> # es non SAMU, siège de SMUR
>           # es <- dx[dx$FINESS %in% c("Wis","Hag","Sav","Sel","Col"),]
>           # analyse_type_etablissement(es)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("analyse_type_etablissement", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("barplot.week.variations")
> ### * barplot.week.variations
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: barplot.week.variations
> ### Title: Variation du nombre de RPU par semaine
> ### Aliases: barplot.week.variations
> 
> ### ** Examples
> 
> v <- week.variations(dx[dx$FINESS == "3Fr",])
Error in diff(vx) : object 'dx' not found
Calls: week.variations -> diff
Execution halted
